from aiogram import Router
from aiogram.filters import Command, Text
from aiogram.types import Message, InlineKeyboardButton, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext

from .states import UserInputState
from config import check_user

router = Router()

@router.message(Command("start"))
async def start(message: Message):
    if await check_user(message.from_user.id):
        return
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="ü§î –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="question"),
        InlineKeyboardButton(text="üëç –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç", callback_data="suggest")
    )
    await message.answer("–ü—Ä–∏–≤–µ—Ç üëã\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –ª–∏–±–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç",
                         reply_markup=builder.as_markup())


@router.callback_query(Text("question"))
async def question(callback: CallbackQuery, state: FSMContext):
    if await check_user(callback.from_user.id):
        return
    await state.set_state(UserInputState.question)
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    )
    await callback.message.edit_text(text="‚ùì –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ —Ñ–∞–π–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫–∏, –±–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –∏—Ö.",
                                     reply_markup=builder.as_markup())


@router.callback_query(Text("suggest"))
async def suggest(callback: CallbackQuery, state: FSMContext):
    if await check_user(callback.from_user.id):
        return
    await state.set_state(UserInputState.suggest)
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    )
    await callback.message.edit_text(text="üí° –í–≤–µ–¥–∏ –ø–æ—Å—Ç —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã –ø–∏—à–µ—à—å –µ–≥–æ –≤ –∫–∞–Ω–∞–ª! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ —Ñ–∞–π–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫–∏, –±–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –∏—Ö.",
                                     reply_markup=builder.as_markup())


@router.callback_query(Text("cancel"))
async def cancel(callback: CallbackQuery, state: FSMContext):
    if await check_user(callback.from_user.id):
        return
    await state.clear()
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="ü§î –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="question"),
        InlineKeyboardButton(text="üëç –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç", callback_data="suggest")
    )
    await callback.message.edit_text(text="–ü—Ä–∏–≤–µ—Ç üëã\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –ª–∏–±–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç",
                         reply_markup=builder.as_markup())
